"""add session model

Revision ID: b96396a12565
Revises: 8536afa0b0bc
Create Date: 2025-07-29 17:36:41.846710

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import UUID

# revision identifiers, used by Alembic.
revision: str = 'b96396a12565'
down_revision: Union[str, None] = '8536afa0b0bc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('active_proxy_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['active_proxy_id'], ['proxy_servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('automation_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('workflow_config', sa.JSON(), nullable=False),
    sa.Column('actions_config', sa.JSON(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('estimated_setup_time', sa.Integer(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_automation_templates_id'), 'automation_templates', ['id'], unique=False)
    op.create_table('automation_workflows',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('trigger_type', sa.String(length=30), nullable=False),
    sa.Column('trigger_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_executions', sa.Integer(), nullable=True),
    sa.Column('execution_window_start', sa.String(length=5), nullable=True),
    sa.Column('execution_window_end', sa.String(length=5), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('target_segments', sa.JSON(), nullable=True),
    sa.Column('exclusion_criteria', sa.JSON(), nullable=True),
    sa.Column('total_entries', sa.Integer(), nullable=False),
    sa.Column('completed_executions', sa.Integer(), nullable=False),
    sa.Column('failed_executions', sa.Integer(), nullable=False),
    sa.Column('last_executed_at', sa.DateTime(), nullable=True),
    sa.Column('next_execution_at', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('workflow_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_automation_workflows_id'), 'automation_workflows', ['id'], unique=False)
    op.create_table('bitcoin_wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('wallet_type', sa.String(length=20), nullable=False),
    sa.Column('network', sa.String(length=20), nullable=False),
    sa.Column('encrypted_xpub', sa.Text(), nullable=False),
    sa.Column('xpub_fingerprint', sa.String(length=64), nullable=False),
    sa.Column('xpub_preview', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_index', sa.Integer(), nullable=True),
    sa.Column('total_addresses_generated', sa.Integer(), nullable=True),
    sa.Column('total_received_btc', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blacklist_checks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('target', sa.String(length=255), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=False),
    sa.Column('is_blacklisted', sa.Boolean(), nullable=True),
    sa.Column('result', sa.String(length=50), nullable=False),
    sa.Column('checked_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blacklist_checks_id'), 'blacklist_checks', ['id'], unique=False)
    op.create_table('bounce_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('smtp_code_pattern', sa.String(length=50), nullable=True),
    sa.Column('message_pattern', sa.String(length=255), nullable=True),
    sa.Column('domain_pattern', sa.String(length=255), nullable=True),
    sa.Column('bounce_type', sa.String(length=20), nullable=False),
    sa.Column('bounce_reason', sa.String(length=50), nullable=True),
    sa.Column('auto_suppress', sa.Boolean(), nullable=False),
    sa.Column('suppress_after_count', sa.Integer(), nullable=True),
    sa.Column('suppression_duration_days', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('rule_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bounce_rules_id'), 'bounce_rules', ['id'], unique=False)
    op.create_table('bulk_check_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('celery_task_id', sa.String(length=255), nullable=False),
    sa.Column('job_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_combos', sa.Integer(), nullable=False),
    sa.Column('max_threads', sa.Integer(), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('proxy_enabled', sa.Boolean(), nullable=True),
    sa.Column('inbox_test_enabled', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('execution_duration', sa.Float(), nullable=True),
    sa.Column('valid_count', sa.Integer(), nullable=True),
    sa.Column('invalid_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('performance_tier', sa.String(length=20), nullable=True),
    sa.Column('total_errors', sa.Integer(), nullable=True),
    sa.Column('auth_errors', sa.Integer(), nullable=True),
    sa.Column('connection_errors', sa.Integer(), nullable=True),
    sa.Column('timeout_errors', sa.Integer(), nullable=True),
    sa.Column('proxy_errors', sa.Integer(), nullable=True),
    sa.Column('proxies_used', sa.Integer(), nullable=True),
    sa.Column('proxy_success_rate', sa.Float(), nullable=True),
    sa.Column('config_snapshot', sa.JSON(), nullable=True),
    sa.Column('error_samples', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bulk_jobs_performance', 'bulk_check_jobs', ['performance_tier', 'success_rate'], unique=False)
    op.create_index('idx_bulk_jobs_session_type', 'bulk_check_jobs', ['session_id', 'job_type'], unique=False)
    op.create_index('idx_bulk_jobs_status_created', 'bulk_check_jobs', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_bulk_check_jobs_celery_task_id'), 'bulk_check_jobs', ['celery_task_id'], unique=True)
    op.create_index(op.f('ix_bulk_check_jobs_id'), 'bulk_check_jobs', ['id'], unique=False)
    op.create_index(op.f('ix_bulk_check_jobs_session_id'), 'bulk_check_jobs', ['session_id'], unique=False)
    op.create_table('bulk_check_performance_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_time', sa.DateTime(), nullable=False),
    sa.Column('time_window', sa.String(length=10), nullable=False),
    sa.Column('smtp_total_jobs', sa.Integer(), nullable=True),
    sa.Column('smtp_successful_jobs', sa.Integer(), nullable=True),
    sa.Column('smtp_avg_success_rate', sa.Float(), nullable=True),
    sa.Column('smtp_avg_speed', sa.Float(), nullable=True),
    sa.Column('smtp_total_checks', sa.Integer(), nullable=True),
    sa.Column('smtp_valid_checks', sa.Integer(), nullable=True),
    sa.Column('imap_total_jobs', sa.Integer(), nullable=True),
    sa.Column('imap_successful_jobs', sa.Integer(), nullable=True),
    sa.Column('imap_avg_success_rate', sa.Float(), nullable=True),
    sa.Column('imap_avg_speed', sa.Float(), nullable=True),
    sa.Column('imap_total_checks', sa.Integer(), nullable=True),
    sa.Column('imap_valid_checks', sa.Integer(), nullable=True),
    sa.Column('total_active_sessions', sa.Integer(), nullable=True),
    sa.Column('proxy_utilization_rate', sa.Float(), nullable=True),
    sa.Column('avg_job_duration', sa.Float(), nullable=True),
    sa.Column('overall_error_rate', sa.Float(), nullable=True),
    sa.Column('auth_error_rate', sa.Float(), nullable=True),
    sa.Column('connection_error_rate', sa.Float(), nullable=True),
    sa.Column('proxy_error_rate', sa.Float(), nullable=True),
    sa.Column('excellent_jobs_pct', sa.Float(), nullable=True),
    sa.Column('good_jobs_pct', sa.Float(), nullable=True),
    sa.Column('fair_jobs_pct', sa.Float(), nullable=True),
    sa.Column('poor_jobs_pct', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_perf_snapshot_time_window', 'bulk_check_performance_snapshots', ['snapshot_time', 'time_window'], unique=False)
    op.create_index(op.f('ix_bulk_check_performance_snapshots_id'), 'bulk_check_performance_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_bulk_check_performance_snapshots_snapshot_time'), 'bulk_check_performance_snapshots', ['snapshot_time'], unique=False)
    op.create_table('contact_journeys',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=False),
    sa.Column('journey_stage', sa.String(length=50), nullable=False),
    sa.Column('engagement_score', sa.Integer(), nullable=False),
    sa.Column('active_workflows', sa.JSON(), nullable=True),
    sa.Column('completed_workflows', sa.JSON(), nullable=True),
    sa.Column('total_emails_received', sa.Integer(), nullable=False),
    sa.Column('total_emails_opened', sa.Integer(), nullable=False),
    sa.Column('total_emails_clicked', sa.Integer(), nullable=False),
    sa.Column('last_engagement_date', sa.DateTime(), nullable=True),
    sa.Column('first_engagement_date', sa.DateTime(), nullable=True),
    sa.Column('preferred_content_type', sa.String(length=50), nullable=True),
    sa.Column('segments', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('best_send_time', sa.String(length=5), nullable=True),
    sa.Column('best_send_day', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('lifecycle_stage', sa.String(length=50), nullable=True),
    sa.Column('conversion_events', sa.JSON(), nullable=True),
    sa.Column('revenue_attributed', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contact_journeys_contact_email'), 'contact_journeys', ['contact_email'], unique=False)
    op.create_index(op.f('ix_contact_journeys_id'), 'contact_journeys', ['id'], unique=False)
    op.create_table('debug_client_events',
    sa.Column('id', UUID(), nullable=False),
    sa.Column('trace_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debug_client_events_event_type'), 'debug_client_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_debug_client_events_trace_id'), 'debug_client_events', ['trace_id'], unique=False)
    op.create_table('domains',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('email_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('is_subscribed', sa.Boolean(), nullable=False),
    sa.Column('is_suppressed', sa.Boolean(), nullable=False),
    sa.Column('consent_preferences', sa.JSON(), nullable=True),
    sa.Column('max_emails_per_week', sa.Integer(), nullable=True),
    sa.Column('preferred_send_time', sa.String(length=20), nullable=True),
    sa.Column('preferred_send_days', sa.JSON(), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('allow_tracking', sa.Boolean(), nullable=False),
    sa.Column('allow_personalization', sa.Boolean(), nullable=False),
    sa.Column('last_engagement_date', sa.DateTime(), nullable=True),
    sa.Column('engagement_score', sa.Integer(), nullable=False),
    sa.Column('subscription_source', sa.String(length=100), nullable=True),
    sa.Column('subscription_date', sa.DateTime(), nullable=True),
    sa.Column('custom_fields', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_preferences_domain'), 'email_preferences', ['domain'], unique=False)
    op.create_index(op.f('ix_email_preferences_email_address'), 'email_preferences', ['email_address'], unique=True)
    op.create_index(op.f('ix_email_preferences_id'), 'email_preferences', ['id'], unique=False)
    op.create_table('error_pattern_analysis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_date', sa.DateTime(), nullable=False),
    sa.Column('error_category', sa.String(length=50), nullable=False),
    sa.Column('error_pattern', sa.Text(), nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('job_type', sa.String(length=20), nullable=True),
    sa.Column('session_count', sa.Integer(), nullable=True),
    sa.Column('success_rate_impact', sa.Float(), nullable=True),
    sa.Column('speed_impact', sa.Float(), nullable=True),
    sa.Column('suggested_fix', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('resolution_date', sa.DateTime(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_error_pattern_analysis_analysis_date'), 'error_pattern_analysis', ['analysis_date'], unique=False)
    op.create_index(op.f('ix_error_pattern_analysis_id'), 'error_pattern_analysis', ['id'], unique=False)
    op.create_table('global_suppression_list',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('list_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_suppression_list_domain'), 'global_suppression_list', ['domain'], unique=False)
    op.create_index(op.f('ix_global_suppression_list_email_address'), 'global_suppression_list', ['email_address'], unique=True)
    op.create_index(op.f('ix_global_suppression_list_id'), 'global_suppression_list', ['id'], unique=False)
    op.create_table('integration_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('auth_type', sa.String(length=30), nullable=False),
    sa.Column('auth_config', sa.JSON(), nullable=False),
    sa.Column('api_base_url', sa.String(length=255), nullable=True),
    sa.Column('api_version', sa.String(length=20), nullable=True),
    sa.Column('supported_actions', sa.JSON(), nullable=False),
    sa.Column('supported_data_types', sa.JSON(), nullable=False),
    sa.Column('webhook_support', sa.Boolean(), nullable=True),
    sa.Column('real_time_sync', sa.Boolean(), nullable=True),
    sa.Column('config_schema', sa.JSON(), nullable=False),
    sa.Column('required_fields', sa.JSON(), nullable=False),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('documentation_url', sa.String(length=255), nullable=True),
    sa.Column('setup_instructions', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('plan_requirements', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('integration_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('use_case', sa.String(length=100), nullable=False),
    sa.Column('provider_requirements', sa.JSON(), nullable=False),
    sa.Column('field_mappings', sa.JSON(), nullable=False),
    sa.Column('sync_settings', sa.JSON(), nullable=False),
    sa.Column('webhook_events', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('estimated_setup_time', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('icon', sa.String(length=255), nullable=True),
    sa.Column('documentation_url', sa.String(length=255), nullable=True),
    sa.Column('tutorial_url', sa.String(length=255), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_code', sa.String(length=20), nullable=False),
    sa.Column('total_seats', sa.Integer(), nullable=True),
    sa.Column('sold_seats', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plan_code')
    )
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('price_per_month', sa.Float(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_trial_plan', sa.Boolean(), nullable=True),
    sa.Column('trial_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('trial_price_usd', sa.Float(), nullable=True),
    sa.Column('trial_price_btc', sa.String(length=20), nullable=True),
    sa.Column('trial_min_threads', sa.Integer(), nullable=True),
    sa.Column('trial_max_extensions', sa.Integer(), nullable=True),
    sa.Column('trial_extension_minutes', sa.Integer(), nullable=True),
    sa.Column('max_threads', sa.Integer(), nullable=True),
    sa.Column('max_concurrent_campaigns', sa.Integer(), nullable=True),
    sa.Column('max_ai_calls_daily', sa.Integer(), nullable=True),
    sa.Column('max_ai_tokens_monthly', sa.BigInteger(), nullable=True),
    sa.Column('allowed_ai_models', sa.JSON(), nullable=True),
    sa.Column('allowed_functions', sa.JSON(), nullable=True),
    sa.Column('has_premium_support', sa.Boolean(), nullable=True),
    sa.Column('update_frequency', sa.String(length=20), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('max_workspaces', sa.Integer(), nullable=True),
    sa.Column('max_concurrent_sessions', sa.Integer(), nullable=True),
    sa.Column('database_tier_label', sa.String(length=20), nullable=True),
    sa.Column('marketing_blurb', sa.Text(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('preference_centers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('brand_color', sa.String(length=7), nullable=True),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('available_consent_types', sa.JSON(), nullable=True),
    sa.Column('allow_frequency_control', sa.Boolean(), nullable=False),
    sa.Column('allow_time_preferences', sa.Boolean(), nullable=False),
    sa.Column('allow_complete_unsubscribe', sa.Boolean(), nullable=False),
    sa.Column('custom_questions', sa.JSON(), nullable=True),
    sa.Column('privacy_policy_url', sa.String(length=500), nullable=True),
    sa.Column('terms_url', sa.String(length=500), nullable=True),
    sa.Column('company_address', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_preference_centers_id'), 'preference_centers', ['id'], unique=False)
    op.create_table('proxy_performance_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_date', sa.DateTime(), nullable=False),
    sa.Column('proxy_host', sa.String(length=255), nullable=False),
    sa.Column('proxy_port', sa.Integer(), nullable=False),
    sa.Column('proxy_type', sa.String(length=20), nullable=True),
    sa.Column('total_connections', sa.Integer(), nullable=True),
    sa.Column('successful_connections', sa.Integer(), nullable=True),
    sa.Column('failed_connections', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('avg_connection_time', sa.Float(), nullable=True),
    sa.Column('avg_response_time', sa.Float(), nullable=True),
    sa.Column('uptime_percentage', sa.Float(), nullable=True),
    sa.Column('estimated_location', sa.String(length=100), nullable=True),
    sa.Column('network_provider', sa.String(length=100), nullable=True),
    sa.Column('reliability_score', sa.Float(), nullable=True),
    sa.Column('speed_score', sa.Float(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('recommended_for_job_type', sa.String(length=20), nullable=True),
    sa.Column('max_concurrent_recommended', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_proxy_analytics_host_port', 'proxy_performance_analytics', ['proxy_host', 'proxy_port'], unique=False)
    op.create_index('idx_proxy_analytics_performance', 'proxy_performance_analytics', ['overall_score', 'analysis_date'], unique=False)
    op.create_index(op.f('ix_proxy_performance_analytics_analysis_date'), 'proxy_performance_analytics', ['analysis_date'], unique=False)
    op.create_index(op.f('ix_proxy_performance_analytics_id'), 'proxy_performance_analytics', ['id'], unique=False)
    op.create_table('server_performance_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('server', sa.String(length=255), nullable=True),
    sa.Column('cpu_usage', sa.String(length=10), nullable=True),
    sa.Column('memory_usage', sa.String(length=10), nullable=True),
    sa.Column('disk_usage', sa.String(length=10), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_server_performance_logs_id'), 'server_performance_logs', ['id'], unique=False)
    op.create_table('session_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('first_activity', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('total_jobs', sa.Integer(), nullable=True),
    sa.Column('successful_jobs', sa.Integer(), nullable=True),
    sa.Column('total_checks_performed', sa.Integer(), nullable=True),
    sa.Column('total_valid_credentials', sa.Integer(), nullable=True),
    sa.Column('total_invalid_credentials', sa.Integer(), nullable=True),
    sa.Column('total_errors', sa.Integer(), nullable=True),
    sa.Column('best_success_rate', sa.Float(), nullable=True),
    sa.Column('avg_success_rate', sa.Float(), nullable=True),
    sa.Column('best_speed', sa.Float(), nullable=True),
    sa.Column('avg_speed', sa.Float(), nullable=True),
    sa.Column('preferred_job_type', sa.String(length=20), nullable=True),
    sa.Column('avg_batch_size', sa.Integer(), nullable=True),
    sa.Column('proxy_usage_rate', sa.Float(), nullable=True),
    sa.Column('most_active_hour', sa.Integer(), nullable=True),
    sa.Column('most_active_day', sa.Integer(), nullable=True),
    sa.Column('avg_session_duration', sa.Float(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('efficiency_score', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_analytics_id'), 'session_analytics', ['id'], unique=False)
    op.create_index(op.f('ix_session_analytics_session_id'), 'session_analytics', ['session_id'], unique=True)
    op.create_table('template_block_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type_name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('default_config', sa.JSON(), nullable=False),
    sa.Column('config_schema', sa.JSON(), nullable=False),
    sa.Column('available_styles', sa.JSON(), nullable=False),
    sa.Column('default_styles', sa.JSON(), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('preview_image', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('supports_responsive', sa.Boolean(), nullable=True),
    sa.Column('supports_conditions', sa.Boolean(), nullable=True),
    sa.Column('min_height', sa.Integer(), nullable=True),
    sa.Column('max_height', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('plan_requirements', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_name')
    )
    op.create_table('template_themes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('primary_color', sa.String(length=20), nullable=False),
    sa.Column('secondary_color', sa.String(length=20), nullable=False),
    sa.Column('accent_color', sa.String(length=20), nullable=False),
    sa.Column('background_color', sa.String(length=20), nullable=False),
    sa.Column('text_color', sa.String(length=20), nullable=False),
    sa.Column('heading_font', sa.String(length=100), nullable=False),
    sa.Column('body_font', sa.String(length=100), nullable=False),
    sa.Column('font_sizes', sa.JSON(), nullable=False),
    sa.Column('button_styles', sa.JSON(), nullable=False),
    sa.Column('link_styles', sa.JSON(), nullable=False),
    sa.Column('border_styles', sa.JSON(), nullable=False),
    sa.Column('spacing_config', sa.JSON(), nullable=False),
    sa.Column('preview_image', sa.Text(), nullable=True),
    sa.Column('thumbnail', sa.Text(), nullable=True),
    sa.Column('custom_css', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('thread_pools',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('max_workers', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trial_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_name', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('min_threads', sa.Integer(), nullable=True),
    sa.Column('max_threads', sa.Integer(), nullable=True),
    sa.Column('max_campaigns', sa.Integer(), nullable=True),
    sa.Column('price_usd', sa.Float(), nullable=True),
    sa.Column('price_btc', sa.String(length=20), nullable=True),
    sa.Column('max_extensions', sa.Integer(), nullable=True),
    sa.Column('extension_minutes', sa.Integer(), nullable=True),
    sa.Column('extension_price_usd', sa.Float(), nullable=True),
    sa.Column('allowed_features', sa.JSON(), nullable=True),
    sa.Column('created_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('config_name')
    )
    op.create_table('unsubscribe_reason_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('category_group', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('requires_text_input', sa.Boolean(), nullable=False),
    sa.Column('is_feedback_request', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_unsubscribe_reason_categories_id'), 'unsubscribe_reason_categories', ['id'], unique=False)
    op.create_table('xpub_validations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('xpub_fingerprint', sa.String(length=64), nullable=False),
    sa.Column('expected_signature', sa.String(length=128), nullable=False),
    sa.Column('last_validated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('validation_failures', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bulk_mail_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total', sa.Integer(), nullable=True),
    sa.Column('sent', sa.Integer(), nullable=True),
    sa.Column('failed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('paused_at', sa.DateTime(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.String(), nullable=True),
    sa.Column('partial_failures', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('email_bases',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hd_wallet_addresses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('derivation_path', sa.String(length=50), nullable=False),
    sa.Column('child_index', sa.Integer(), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=True),
    sa.Column('used_for_customer_id', sa.UUID(), nullable=True),
    sa.Column('first_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_received_btc', sa.String(length=20), nullable=True),
    sa.Column('payment_count', sa.Integer(), nullable=True),
    sa.Column('rotation_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['wallet_id'], ['bitcoin_wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    op.create_table('import_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('total_records', sa.Integer(), nullable=True),
    sa.Column('processed_records', sa.Integer(), nullable=True),
    sa.Column('failed_records', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('licenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_key', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_trial', sa.Boolean(), nullable=True),
    sa.Column('starts_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_key')
    )
    op.create_index(op.f('ix_licenses_id'), 'licenses', ['id'], unique=False)
    op.create_table('oauth_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('scope', sa.String(length=500), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth_tokens_id'), 'oauth_tokens', ['id'], unique=False)
    op.create_table('session_devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('fingerprint', sa.String(length=128), nullable=False),
    sa.Column('first_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_name', sa.String(length=100), nullable=False),
    sa.Column('owner_user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('max_seats', sa.Integer(), nullable=True),
    sa.Column('current_seats', sa.Integer(), nullable=True),
    sa.Column('price_per_seat', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trial_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_expired', sa.Boolean(), nullable=True),
    sa.Column('extensions_used', sa.Integer(), nullable=True),
    sa.Column('max_extensions_allowed', sa.Integer(), nullable=True),
    sa.Column('threads_used', sa.Integer(), nullable=True),
    sa.Column('campaigns_sent', sa.Integer(), nullable=True),
    sa.Column('payment_request_id', sa.UUID(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('payment_confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usage_counters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('counter_type', sa.String(length=50), nullable=False),
    sa.Column('current_count', sa.BigInteger(), nullable=True),
    sa.Column('reset_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('campaign_emails',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('opened_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('clicked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bounced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('smtp_account_id', sa.UUID(), nullable=True),
    sa.Column('proxy_server_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['proxy_server_id'], ['proxy_servers.id'], ),
    sa.ForeignKeyConstraint(['smtp_account_id'], ['smtp_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_campaign_emails_campaign', 'campaign_emails', ['campaign_id'], unique=False)
    op.create_index('idx_campaign_emails_campaign_status', 'campaign_emails', ['campaign_id', 'status'], unique=False)
    op.create_index('idx_campaign_emails_clicked', 'campaign_emails', ['clicked_at'], unique=False)
    op.create_index('idx_campaign_emails_email', 'campaign_emails', ['email'], unique=False)
    op.create_index('idx_campaign_emails_opened', 'campaign_emails', ['opened_at'], unique=False)
    op.create_index('idx_campaign_emails_proxy', 'campaign_emails', ['proxy_server_id'], unique=False)
    op.create_index('idx_campaign_emails_sent_at', 'campaign_emails', ['sent_at'], unique=False)
    op.create_index('idx_campaign_emails_smtp', 'campaign_emails', ['smtp_account_id'], unique=False)
    op.create_index('idx_campaign_emails_status', 'campaign_emails', ['status'], unique=False)
    op.create_index(op.f('ix_campaign_emails_id'), 'campaign_emails', ['id'], unique=False)
    op.create_table('campaign_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('metric_name', sa.String(length=100), nullable=False),
    sa.Column('metric_value', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('sent_count', sa.Integer(), nullable=True),
    sa.Column('delivered_count', sa.Integer(), nullable=True),
    sa.Column('opened_count', sa.Integer(), nullable=True),
    sa.Column('clicked_count', sa.Integer(), nullable=True),
    sa.Column('bounced_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campaign_metrics_id'), 'campaign_metrics', ['id'], unique=False)
    op.create_table('consent_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('consent_type', sa.String(length=50), nullable=True),
    sa.Column('old_value', sa.JSON(), nullable=True),
    sa.Column('new_value', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('source_campaign_id', sa.UUID(), nullable=True),
    sa.Column('source_url', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=False),
    sa.Column('consent_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_consent_logs_email_address'), 'consent_logs', ['email_address'], unique=False)
    op.create_index(op.f('ix_consent_logs_id'), 'consent_logs', ['id'], unique=False)
    op.create_table('deliverability_stats',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('smtp_account_id', sa.UUID(), nullable=True),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('emails_sent', sa.Integer(), nullable=False),
    sa.Column('emails_delivered', sa.Integer(), nullable=False),
    sa.Column('total_bounces', sa.Integer(), nullable=False),
    sa.Column('hard_bounces', sa.Integer(), nullable=False),
    sa.Column('soft_bounces', sa.Integer(), nullable=False),
    sa.Column('complaint_bounces', sa.Integer(), nullable=False),
    sa.Column('emails_opened', sa.Integer(), nullable=False),
    sa.Column('emails_clicked', sa.Integer(), nullable=False),
    sa.Column('unsubscribes', sa.Integer(), nullable=False),
    sa.Column('delivery_rate', sa.String(length=10), nullable=True),
    sa.Column('bounce_rate', sa.String(length=10), nullable=True),
    sa.Column('hard_bounce_rate', sa.String(length=10), nullable=True),
    sa.Column('complaint_rate', sa.String(length=10), nullable=True),
    sa.Column('open_rate', sa.String(length=10), nullable=True),
    sa.Column('click_rate', sa.String(length=10), nullable=True),
    sa.Column('unsubscribe_rate', sa.String(length=10), nullable=True),
    sa.Column('stats_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['smtp_account_id'], ['smtp_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deliverability_stats_date'), 'deliverability_stats', ['date'], unique=False)
    op.create_index(op.f('ix_deliverability_stats_id'), 'deliverability_stats', ['id'], unique=False)
    op.create_table('email_bounces',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('bounce_type', sa.String(length=20), nullable=False),
    sa.Column('bounce_reason', sa.String(length=50), nullable=True),
    sa.Column('bounce_code', sa.String(length=10), nullable=True),
    sa.Column('bounce_message', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('bounced_at', sa.DateTime(), nullable=False),
    sa.Column('smtp_account_id', sa.UUID(), nullable=True),
    sa.Column('sending_ip', sa.String(length=45), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('suppressed', sa.Boolean(), nullable=False),
    sa.Column('raw_bounce_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.ForeignKeyConstraint(['smtp_account_id'], ['smtp_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_bounces_email_address'), 'email_bounces', ['email_address'], unique=False)
    op.create_index(op.f('ix_email_bounces_id'), 'email_bounces', ['id'], unique=False)
    op.create_table('failed_sends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('lead_email', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
   
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_failed_sends_id'), 'failed_sends', ['id'], unique=False)
    op.create_table('feedback_loops',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('isp_name', sa.String(length=100), nullable=False),
    sa.Column('feedback_type', sa.String(length=50), nullable=False),
    sa.Column('original_message_id', sa.String(length=255), nullable=True),
    sa.Column('reported_email', sa.String(length=255), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('reported_at', sa.DateTime(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('action_taken', sa.String(length=100), nullable=True),
    sa.Column('raw_feedback_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_loops_id'), 'feedback_loops', ['id'], unique=False)
    op.create_index(op.f('ix_feedback_loops_reported_email'), 'feedback_loops', ['reported_email'], unique=False)
    op.create_table('imap_folders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=True),
    sa.Column('unread_count', sa.Integer(), nullable=True),
    sa.Column('last_sync', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['imap_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('payment_request_id', sa.UUID(), nullable=False),
    sa.Column('plan_id', sa.String(length=50), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=True),
    sa.Column('wallet_id', sa.UUID(), nullable=False),
    sa.Column('address_id', sa.UUID(), nullable=False),
    sa.Column('btc_address', sa.String(length=100), nullable=False),
    sa.Column('amount_btc', sa.String(length=20), nullable=False),
    sa.Column('amount_usd', sa.Float(), nullable=True),
    sa.Column('amount_received_btc', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('confirmations', sa.Integer(), nullable=True),
    sa.Column('required_confirmations', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('qr_data', sa.Text(), nullable=True),
    sa.Column('transaction_ids', sa.JSON(), nullable=True),
    sa.Column('blockchain_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['hd_wallet_addresses.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['bitcoin_wallets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payment_request_id')
    )
    op.create_table('team_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_plan_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=True),
    sa.Column('invited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['team_plan_id'], ['team_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unsubscribe_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=20), nullable=False),
    sa.Column('source_campaign_id', sa.UUID(), nullable=True),
    sa.Column('source_email_id', sa.String(length=255), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('referer', sa.String(length=500), nullable=True),
    sa.Column('unsubscribed_at', sa.DateTime(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('reason_category', sa.String(length=50), nullable=True),
    sa.Column('reason_text', sa.Text(), nullable=True),
    sa.Column('record_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unsubscribe_records_domain'), 'unsubscribe_records', ['domain'], unique=False)
    op.create_index(op.f('ix_unsubscribe_records_email_address'), 'unsubscribe_records', ['email_address'], unique=False)
    op.create_index(op.f('ix_unsubscribe_records_id'), 'unsubscribe_records', ['id'], unique=False)
    op.create_table('unsubscribe_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('campaign_id', sa.UUID(), nullable=True),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('used_ip', sa.String(length=45), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('unsubscribe_type', sa.String(length=20), nullable=False),
    sa.Column('unsubscribe_scope', sa.JSON(), nullable=True),
    sa.Column('token_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unsubscribe_tokens_email_address'), 'unsubscribe_tokens', ['email_address'], unique=False)
    op.create_index(op.f('ix_unsubscribe_tokens_id'), 'unsubscribe_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_unsubscribe_tokens_token'), 'unsubscribe_tokens', ['token'], unique=True)
    op.create_table('vip_customers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('current_address_id', sa.UUID(), nullable=True),
    sa.Column('current_child_index', sa.Integer(), nullable=True),
    sa.Column('last_rotation', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rotation_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_payments', sa.Integer(), nullable=True),
    sa.Column('total_paid_btc', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_address_id'], ['hd_wallet_addresses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('customer_id')
    )
    op.create_table('imap_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('folder_id', sa.UUID(), nullable=False),
    sa.Column('uid', sa.String(length=50), nullable=False),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('subject', sa.String(length=500), nullable=True),
    sa.Column('sender', sa.String(length=255), nullable=True),
    sa.Column('sender_name', sa.String(length=255), nullable=True),
    sa.Column('preview', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('is_starred', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['folder_id'], ['imap_folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    ),
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('active_proxy_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['active_proxy_id'], ['proxy_servers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('integrations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('auth_data', sa.JSON(), nullable=False),
    sa.Column('auth_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('field_mappings', sa.JSON(), nullable=False),
    sa.Column('sync_settings', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('sync_frequency', sa.String(length=20), nullable=False),
    sa.Column('total_syncs', sa.Integer(), nullable=True),
    sa.Column('successful_syncs', sa.Integer(), nullable=True),
    sa.Column('failed_syncs', sa.Integer(), nullable=True),
    sa.Column('last_sync_duration', sa.Float(), nullable=True),
    sa.Column('records_synced', sa.Integer(), nullable=True),
    sa.Column('webhook_url', sa.String(length=255), nullable=True),
    sa.Column('webhook_secret', sa.String(length=255), nullable=True),
    sa.Column('webhook_events', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['integration_providers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('check_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('check_type', sa.String(length=50), nullable=False),
    sa.Column('input_params', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('response', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('checked_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('suppression_list',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email_address', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=False),
    sa.Column('reason', sa.String(length=50), nullable=False),
    sa.Column('suppression_type', sa.String(length=20), nullable=False),
    sa.Column('source_campaign_id', sa.UUID(), nullable=True),
    sa.Column('source_bounce_id', sa.UUID(), nullable=True),
    sa.Column('bounce_count', sa.Integer(), nullable=False),
    sa.Column('hard_bounce_count', sa.Integer(), nullable=False),
    sa.Column('soft_bounce_count', sa.Integer(), nullable=False),
    sa.Column('last_bounce_date', sa.DateTime(), nullable=True),
    sa.Column('unsubscribed_at', sa.DateTime(), nullable=True),
    sa.Column('unsubscribe_method', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('bounce_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['source_bounce_id'], ['email_bounces.id'], ),
    sa.ForeignKeyConstraint(['source_campaign_id'], ['campaigns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suppression_list_domain'), 'suppression_list', ['domain'], unique=False)
    op.create_index(op.f('ix_suppression_list_email_address'), 'suppression_list', ['email_address'], unique=True)
    op.create_index(op.f('ix_suppression_list_id'), 'suppression_list', ['id'], unique=False)
    op.create_table('template_layouts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('layout_type', sa.String(length=30), nullable=False),
    sa.Column('grid_system', sa.String(length=20), nullable=False),
    sa.Column('layout_config', sa.JSON(), nullable=False),
    sa.Column('container_settings', sa.JSON(), nullable=False),
    sa.Column('mobile_config', sa.JSON(), nullable=True),
    sa.Column('tablet_config', sa.JSON(), nullable=True),
    sa.Column('background_color', sa.String(length=20), nullable=True),
    sa.Column('background_image', sa.Text(), nullable=True),
    sa.Column('custom_css', sa.Text(), nullable=True),
    sa.Column('is_template', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('imap_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.UUID(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=True),
    sa.Column('content_type', sa.String(length=100), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['imap_messages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_imap_attachments_id'), 'imap_attachments', ['id'], unique=False)
    op.create_table('integration_field_maps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('source_field', sa.String(length=255), nullable=False),
    sa.Column('target_field', sa.String(length=255), nullable=False),
    sa.Column('field_type', sa.String(length=50), nullable=False),
    sa.Column('sync_direction', sa.String(length=20), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('is_unique', sa.Boolean(), nullable=True),
    sa.Column('transform_rules', sa.JSON(), nullable=True),
    sa.Column('default_value', sa.String(length=255), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('integration_sync_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('sync_type', sa.String(length=50), nullable=False),
    sa.Column('sync_direction', sa.String(length=20), nullable=False),
    sa.Column('data_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_created', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_deleted', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('sync_summary', sa.JSON(), nullable=True),
    sa.Column('processed_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('integration_usage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('api_calls', sa.Integer(), nullable=True),
    sa.Column('data_transferred', sa.Integer(), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('sync_duration', sa.Float(), nullable=True),
    sa.Column('avg_response_time', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('integration_webhooks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('integration_id', sa.UUID(), nullable=False),
    sa.Column('endpoint_url', sa.String(length=255), nullable=False),
    sa.Column('secret_key', sa.String(length=255), nullable=False),
    sa.Column('events', sa.JSON(), nullable=False),
    sa.Column('http_method', sa.String(length=10), nullable=False),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('payload_format', sa.String(length=20), nullable=False),
    sa.Column('verify_ssl', sa.Boolean(), nullable=True),
    sa.Column('ip_whitelist', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_triggers', sa.Integer(), nullable=True),
    sa.Column('successful_triggers', sa.Integer(), nullable=True),
    sa.Column('failed_triggers', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('retry_delay', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['integration_id'], ['integrations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('template_blocks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('layout_id', sa.UUID(), nullable=False),
    sa.Column('block_type', sa.String(length=50), nullable=False),
    sa.Column('block_name', sa.String(length=255), nullable=True),
    sa.Column('row_position', sa.Integer(), nullable=False),
    sa.Column('column_position', sa.Integer(), nullable=False),
    sa.Column('column_span', sa.Integer(), nullable=False),
    sa.Column('row_span', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('styling', sa.JSON(), nullable=False),
    sa.Column('mobile_settings', sa.JSON(), nullable=True),
    sa.Column('tablet_settings', sa.JSON(), nullable=True),
    sa.Column('is_editable', sa.Boolean(), nullable=True),
    sa.Column('is_removable', sa.Boolean(), nullable=True),
    sa.Column('is_movable', sa.Boolean(), nullable=True),
    sa.Column('display_conditions', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['template_layouts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('integration_webhook_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('webhook_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('source_ip', sa.String(length=45), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('response_body', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('processing_notes', sa.Text(), nullable=True),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['webhook_id'], ['integration_webhooks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('template_builder_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_session_id', sa.UUID(), nullable=False),
    sa.Column('template_id', sa.UUID(), nullable=True),
    sa.Column('layout_id', sa.UUID(), nullable=True),
    sa.Column('session_name', sa.String(length=255), nullable=True),
    sa.Column('current_state', sa.JSON(), nullable=False),
    sa.Column('auto_save_data', sa.JSON(), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('changes_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('session_expired', sa.Boolean(), nullable=True),
    sa.Column('is_collaborative', sa.Boolean(), nullable=True),
    sa.Column('collaborators', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['template_layouts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['email_templates.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_actions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('action_type', sa.String(length=30), nullable=False),
    sa.Column('action_config', sa.JSON(), nullable=False),
    sa.Column('sequence_order', sa.Integer(), nullable=False),
    sa.Column('parent_action_id', sa.UUID(), nullable=True),
    sa.Column('delay_amount', sa.Integer(), nullable=True),
    sa.Column('delay_type', sa.String(length=20), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('email_template_id', sa.UUID(), nullable=True),
    sa.Column('subject_line', sa.String(length=500), nullable=True),
    sa.Column('email_content', sa.Text(), nullable=True),
    sa.Column('execution_count', sa.Integer(), nullable=False),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('action_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['email_template_id'], ['email_templates.id'], ),
    sa.ForeignKeyConstraint(['parent_action_id'], ['workflow_actions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['automation_workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_actions_id'), 'workflow_actions', ['id'], unique=False)
    op.create_table('automation_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=True),
    sa.Column('action_id', sa.UUID(), nullable=True),
    sa.Column('executions_started', sa.Integer(), nullable=False),
    sa.Column('executions_completed', sa.Integer(), nullable=False),
    sa.Column('executions_failed', sa.Integer(), nullable=False),
    sa.Column('emails_sent', sa.Integer(), nullable=False),
    sa.Column('emails_delivered', sa.Integer(), nullable=False),
    sa.Column('emails_opened', sa.Integer(), nullable=False),
    sa.Column('emails_clicked', sa.Integer(), nullable=False),
    sa.Column('emails_bounced', sa.Integer(), nullable=False),
    sa.Column('unsubscribes', sa.Integer(), nullable=False),
    sa.Column('complaints', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('revenue_generated', sa.Float(), nullable=False),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('open_rate', sa.Float(), nullable=True),
    sa.Column('click_rate', sa.Float(), nullable=True),
    sa.Column('conversion_rate', sa.Float(), nullable=True),
    sa.Column('metrics_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['workflow_actions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['automation_workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_automation_metrics_date'), 'automation_metrics', ['date'], unique=False)
    op.create_index(op.f('ix_automation_metrics_id'), 'automation_metrics', ['id'], unique=False)
    op.create_table('automation_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('workflow_id', sa.UUID(), nullable=True),
    sa.Column('action_id', sa.UUID(), nullable=True),
    sa.Column('rule_type', sa.String(length=50), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('actions', sa.JSON(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('evaluation_count', sa.Integer(), nullable=False),
    sa.Column('match_count', sa.Integer(), nullable=False),
    sa.Column('last_matched_at', sa.DateTime(), nullable=True),
    sa.Column('trigger_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['action_id'], ['workflow_actions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['automation_workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_automation_rules_id'), 'automation_rules', ['id'], unique=False)
    op.create_table('workflow_executions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('current_action_id', sa.UUID(), nullable=True),
    sa.Column('next_action_id', sa.UUID(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('next_execution_at', sa.DateTime(), nullable=True),
    sa.Column('actions_completed', sa.Integer(), nullable=False),
    sa.Column('total_actions', sa.Integer(), nullable=False),
    sa.Column('completion_percentage', sa.Float(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('execution_context', sa.JSON(), nullable=True),
    sa.Column('emails_sent', sa.Integer(), nullable=False),
    sa.Column('emails_opened', sa.Integer(), nullable=False),
    sa.Column('emails_clicked', sa.Integer(), nullable=False),
    sa.Column('execution_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_action_id'], ['workflow_actions.id'], ),
    sa.ForeignKeyConstraint(['next_action_id'], ['workflow_actions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['automation_workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_executions_contact_email'), 'workflow_executions', ['contact_email'], unique=False)
    op.create_index(op.f('ix_workflow_executions_id'), 'workflow_executions', ['id'], unique=False)
    op.create_table('workflow_triggers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('workflow_id', sa.UUID(), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=False),
    sa.Column('trigger_source', sa.String(length=50), nullable=False),
    sa.Column('trigger_event', sa.String(length=100), nullable=True),
    sa.Column('trigger_data', sa.JSON(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('execution_id', sa.UUID(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('request_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['execution_id'], ['workflow_executions.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['automation_workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_triggers_contact_email'), 'workflow_triggers', ['contact_email'], unique=False)
    op.create_index(op.f('ix_workflow_triggers_id'), 'workflow_triggers', ['id'], unique=False)
    op.add_column('campaigns', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('campaigns', sa.Column('subject', sa.String(length=500), nullable=True))
    op.add_column('campaigns', sa.Column('message_type', sa.String(length=10), nullable=True))
    op.add_column('campaigns', sa.Column('batch_size', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('delay_seconds', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('retries', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('timeout', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('total_emails', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('sent_emails', sa.Integer(), nullable=True))
    op.add_column('campaigns', sa.Column('failed_emails', sa.Integer(), nullable=True))
    op.alter_column('campaigns', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'draft'::character varying"))
    op.create_index('idx_campaigns_created_at', 'campaigns', ['created_at'], unique=False)
    op.create_index('idx_campaigns_name', 'campaigns', ['name'], unique=False)
    op.create_index('idx_campaigns_status', 'campaigns', ['status'], unique=False)
    op.create_index('idx_campaigns_user_created', 'campaigns', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_campaigns_user_id', 'campaigns', ['user_id'], unique=False)
    op.create_index('idx_campaigns_user_status', 'campaigns', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_campaigns_id'), 'campaigns', ['id'], unique=False)
    op.drop_constraint(op.f('campaigns_session_id_fkey'), 'campaigns', type_='foreignkey')
    op.create_foreign_key(None, 'campaigns', 'users', ['user_id'], ['id'])
    op.drop_column('campaigns', 'clicked_count')
    op.drop_column('campaigns', 'delivered_count')
    op.drop_column('campaigns', 'session_id')
    op.drop_column('campaigns', 'sent_count')
    op.drop_column('campaigns', 'completed_at')
    op.drop_column('campaigns', 'opened_count')
    op.drop_column('campaigns', 'bounced_count')
    op.drop_column('campaigns', 'started_at')
    op.add_column('email_templates', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('email_templates', sa.Column('layout_id', sa.UUID(), nullable=True))
    op.add_column('email_templates', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.alter_column('email_templates', 'subject',
               existing_type=sa.VARCHAR(length=500),
               nullable=True)
    op.create_index('idx_templates_active', 'email_templates', ['is_active'], unique=False)
    op.create_index('idx_templates_layout_id', 'email_templates', ['layout_id'], unique=False)
    op.create_index('idx_templates_name', 'email_templates', ['name'], unique=False)
    op.create_index('idx_templates_user_active', 'email_templates', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_templates_user_id', 'email_templates', ['user_id'], unique=False)
    op.create_index(op.f('ix_email_templates_id'), 'email_templates', ['id'], unique=False)
    op.drop_constraint(op.f('email_templates_created_by_fkey'), 'email_templates', type_='foreignkey')
    op.create_foreign_key(None, 'email_templates', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'email_templates', 'template_layouts', ['layout_id'], ['id'])
    op.drop_column('email_templates', 'template_type')
    op.drop_column('email_templates', 'created_by')
    op.alter_column('imap_accounts', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.add_column('lead_bases', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('lead_bases', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('lead_bases', sa.Column('total_leads', sa.Integer(), nullable=True))
    op.add_column('lead_bases', sa.Column('verified_leads', sa.Integer(), nullable=True))
    op.add_column('lead_bases', sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True))
    op.create_index('idx_lead_bases_name', 'lead_bases', ['name'], unique=False)
    op.create_index('idx_lead_bases_updated', 'lead_bases', ['last_updated'], unique=False)
    op.create_index('idx_lead_bases_user_id', 'lead_bases', ['user_id'], unique=False)
    op.create_index(op.f('ix_lead_bases_id'), 'lead_bases', ['id'], unique=False)
    op.drop_constraint(op.f('lead_bases_session_id_fkey'), 'lead_bases', type_='foreignkey')
    op.create_foreign_key(None, 'lead_bases', 'users', ['user_id'], ['id'])
    op.drop_column('lead_bases', 'upload_date')
    op.drop_column('lead_bases', 'status')
    op.drop_column('lead_bases', 'session_id')
    op.add_column('lead_entries', sa.Column('first_name', sa.String(length=100), nullable=True))
    op.add_column('lead_entries', sa.Column('last_name', sa.String(length=100), nullable=True))
    op.add_column('lead_entries', sa.Column('company', sa.String(length=255), nullable=True))
    op.add_column('lead_entries', sa.Column('user_id', sa.UUID(), nullable=False))
    op.add_column('lead_entries', sa.Column('lead_base_id', sa.UUID(), nullable=False))
    op.add_column('lead_entries', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('lead_entries', sa.Column('is_verified', sa.Boolean(), nullable=True))
    op.add_column('lead_entries', sa.Column('bounce_count', sa.Integer(), nullable=True))
    op.add_column('lead_entries', sa.Column('last_contacted', sa.DateTime(timezone=True), nullable=True))
    op.create_index('idx_leads_active', 'lead_entries', ['is_active'], unique=False)
    op.create_index('idx_leads_base_id', 'lead_entries', ['lead_base_id'], unique=False)
    op.create_index('idx_leads_company', 'lead_entries', ['company'], unique=False)
    op.create_index('idx_leads_email', 'lead_entries', ['email'], unique=False)
    op.create_index('idx_leads_email_active', 'lead_entries', ['email', 'is_active'], unique=False)
    op.create_index('idx_leads_last_contacted', 'lead_entries', ['last_contacted'], unique=False)
    op.create_index('idx_leads_user_base', 'lead_entries', ['user_id', 'lead_base_id'], unique=False)
    op.create_index('idx_leads_user_id', 'lead_entries', ['user_id'], unique=False)
    op.create_index('idx_leads_verified', 'lead_entries', ['is_verified'], unique=False)
    op.create_index(op.f('ix_lead_entries_id'), 'lead_entries', ['id'], unique=False)
    op.drop_constraint(op.f('lead_entries_session_id_fkey'), 'lead_entries', type_='foreignkey')
    op.create_foreign_key(None, 'lead_entries', 'lead_bases', ['lead_base_id'], ['id'])
    op.create_foreign_key(None, 'lead_entries', 'users', ['user_id'], ['id'])
    op.drop_column('lead_entries', 'status')
    op.drop_column('lead_entries', 'session_id')
    op.alter_column('login_activity', 'success',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('proxy_servers', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('proxy_servers', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.create_index('idx_proxy_active', 'proxy_servers', ['is_active'], unique=False)
    op.create_index('idx_proxy_type', 'proxy_servers', ['proxy_type'], unique=False)
    op.create_index('idx_proxy_usage', 'proxy_servers', ['usage_count'], unique=False)
    op.create_index('idx_proxy_user_active', 'proxy_servers', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_proxy_user_id', 'proxy_servers', ['user_id'], unique=False)
    op.create_index(op.f('ix_proxy_servers_id'), 'proxy_servers', ['id'], unique=False)
    op.alter_column('smtp_accounts', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('smtp_accounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.create_index('idx_smtp_active', 'smtp_accounts', ['is_active'], unique=False)
    op.create_index('idx_smtp_host', 'smtp_accounts', ['host'], unique=False)
    op.create_index('idx_smtp_last_used', 'smtp_accounts', ['last_used'], unique=False)
    op.create_index('idx_smtp_user_active', 'smtp_accounts', ['user_id', 'is_active'], unique=False)
    op.create_index('idx_smtp_user_id', 'smtp_accounts', ['user_id'], unique=False)
    op.create_index(op.f('ix_smtp_accounts_id'), 'smtp_accounts', ['id'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_telegram_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_username'), 'users', ['telegram_username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_telegram_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_telegram_username_key'), 'users', ['telegram_username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.drop_index(op.f('ix_smtp_accounts_id'), table_name='smtp_accounts')
    op.drop_index('idx_smtp_user_id', table_name='smtp_accounts')
    op.drop_index('idx_smtp_user_active', table_name='smtp_accounts')
    op.drop_index('idx_smtp_last_used', table_name='smtp_accounts')
    op.drop_index('idx_smtp_host', table_name='smtp_accounts')
    op.drop_index('idx_smtp_active', table_name='smtp_accounts')
    op.alter_column('smtp_accounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('smtp_accounts', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_index(op.f('ix_proxy_servers_id'), table_name='proxy_servers')
    op.drop_index('idx_proxy_user_id', table_name='proxy_servers')
    op.drop_index('idx_proxy_user_active', table_name='proxy_servers')
    op.drop_index('idx_proxy_usage', table_name='proxy_servers')
    op.drop_index('idx_proxy_type', table_name='proxy_servers')
    op.drop_index('idx_proxy_active', table_name='proxy_servers')
    op.alter_column('proxy_servers', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('proxy_servers', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('login_activity', 'success',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.add_column('lead_entries', sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('lead_entries', sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'lead_entries', type_='foreignkey')
    op.drop_constraint(None, 'lead_entries', type_='foreignkey')
    op.create_foreign_key(op.f('lead_entries_session_id_fkey'), 'lead_entries', 'users', ['session_id'], ['id'])
    op.drop_index(op.f('ix_lead_entries_id'), table_name='lead_entries')
    op.drop_index('idx_leads_verified', table_name='lead_entries')
    op.drop_index('idx_leads_user_id', table_name='lead_entries')
    op.drop_index('idx_leads_user_base', table_name='lead_entries')
    op.drop_index('idx_leads_last_contacted', table_name='lead_entries')
    op.drop_index('idx_leads_email_active', table_name='lead_entries')
    op.drop_index('idx_leads_email', table_name='lead_entries')
    op.drop_index('idx_leads_company', table_name='lead_entries')
    op.drop_index('idx_leads_base_id', table_name='lead_entries')
    op.drop_index('idx_leads_active', table_name='lead_entries')
    op.drop_column('lead_entries', 'last_contacted')
    op.drop_column('lead_entries', 'bounce_count')
    op.drop_column('lead_entries', 'is_verified')
    op.drop_column('lead_entries', 'is_active')
    op.drop_column('lead_entries', 'lead_base_id')
    op.drop_column('lead_entries', 'user_id')
    op.drop_column('lead_entries', 'company')
    op.drop_column('lead_entries', 'last_name')
    op.drop_column('lead_entries', 'first_name')
    op.add_column('lead_bases', sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('lead_bases', sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True))
    op.add_column('lead_bases', sa.Column('upload_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'lead_bases', type_='foreignkey')
    op.create_foreign_key(op.f('lead_bases_session_id_fkey'), 'lead_bases', 'users', ['session_id'], ['id'])
    op.drop_index(op.f('ix_lead_bases_id'), table_name='lead_bases')
    op.drop_index('idx_lead_bases_user_id', table_name='lead_bases')
    op.drop_index('idx_lead_bases_updated', table_name='lead_bases')
    op.drop_index('idx_lead_bases_name', table_name='lead_bases')
    op.drop_column('lead_bases', 'last_updated')
    op.drop_column('lead_bases', 'verified_leads')
    op.drop_column('lead_bases', 'total_leads')
    op.drop_column('lead_bases', 'user_id')
    op.drop_column('lead_bases', 'description')
    op.alter_column('imap_accounts', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.add_column('email_templates', sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('email_templates', sa.Column('template_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'email_templates', type_='foreignkey')
    op.drop_constraint(None, 'email_templates', type_='foreignkey')
    op.create_foreign_key(op.f('email_templates_created_by_fkey'), 'email_templates', 'users', ['created_by'], ['id'])
    op.drop_index(op.f('ix_email_templates_id'), table_name='email_templates')
    op.drop_index('idx_templates_user_id', table_name='email_templates')
    op.drop_index('idx_templates_user_active', table_name='email_templates')
    op.drop_index('idx_templates_name', table_name='email_templates')
    op.drop_index('idx_templates_layout_id', table_name='email_templates')
    op.drop_index('idx_templates_active', table_name='email_templates')
    op.alter_column('email_templates', 'subject',
               existing_type=sa.VARCHAR(length=500),
               nullable=False)
    op.drop_column('email_templates', 'is_active')
    op.drop_column('email_templates', 'layout_id')
    op.drop_column('email_templates', 'user_id')
    op.add_column('campaigns', sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('bounced_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('opened_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('sent_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('session_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('delivered_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('campaigns', sa.Column('clicked_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'campaigns', type_='foreignkey')
    op.create_foreign_key(op.f('campaigns_session_id_fkey'), 'campaigns', 'users', ['session_id'], ['id'])
    op.drop_index(op.f('ix_campaigns_id'), table_name='campaigns')
    op.drop_index('idx_campaigns_user_status', table_name='campaigns')
    op.drop_index('idx_campaigns_user_id', table_name='campaigns')
    op.drop_index('idx_campaigns_user_created', table_name='campaigns')
    op.drop_index('idx_campaigns_status', table_name='campaigns')
    op.drop_index('idx_campaigns_name', table_name='campaigns')
    op.drop_index('idx_campaigns_created_at', table_name='campaigns')
    op.alter_column('campaigns', 'status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'draft'::character varying"))
    op.drop_column('campaigns', 'failed_emails')
    op.drop_column('campaigns', 'sent_emails')
    op.drop_column('campaigns', 'total_emails')
    op.drop_column('campaigns', 'timeout')
    op.drop_column('campaigns', 'retries')
    op.drop_column('campaigns', 'delay_seconds')
    op.drop_column('campaigns', 'batch_size')
    op.drop_column('campaigns', 'message_type')
    op.drop_column('campaigns', 'subject')
    op.drop_column('campaigns', 'user_id')
    op.drop_index(op.f('ix_workflow_triggers_id'), table_name='workflow_triggers')
    op.drop_index(op.f('ix_workflow_triggers_contact_email'), table_name='workflow_triggers')
    op.drop_table('workflow_triggers')
    op.drop_index(op.f('ix_workflow_executions_id'), table_name='workflow_executions')
    op.drop_index(op.f('ix_workflow_executions_contact_email'), table_name='workflow_executions')
    op.drop_table('workflow_executions')
    op.drop_index(op.f('ix_automation_rules_id'), table_name='automation_rules')
    op.drop_table('automation_rules')
    op.drop_index(op.f('ix_automation_metrics_id'), table_name='automation_metrics')
    op.drop_index(op.f('ix_automation_metrics_date'), table_name='automation_metrics')
    op.drop_table('automation_metrics')
    op.drop_index(op.f('ix_workflow_actions_id'), table_name='workflow_actions')
    op.drop_table('workflow_actions')
    op.drop_table('template_builder_sessions')
    op.drop_table('integration_webhook_logs')
    op.drop_table('template_blocks')
    op.drop_table('integration_webhooks')
    op.drop_table('integration_usage')
    op.drop_table('integration_sync_logs')
    op.drop_table('integration_field_maps')
    op.drop_index(op.f('ix_imap_attachments_id'), table_name='imap_attachments')
    op.drop_table('imap_attachments')
    op.drop_table('template_layouts')
    op.drop_index(op.f('ix_suppression_list_id'), table_name='suppression_list')
    op.drop_index(op.f('ix_suppression_list_email_address'), table_name='suppression_list')
    op.drop_index(op.f('ix_suppression_list_domain'), table_name='suppression_list')
    op.drop_table('suppression_list')
    op.drop_table('integrations')
    op.drop_table('imap_messages')
    op.drop_table('check_logs')
    op.drop_table('vip_customers')
    op.drop_index(op.f('ix_unsubscribe_tokens_token'), table_name='unsubscribe_tokens')
    op.drop_index(op.f('ix_unsubscribe_tokens_id'), table_name='unsubscribe_tokens')
    op.drop_index(op.f('ix_unsubscribe_tokens_email_address'), table_name='unsubscribe_tokens')
    op.drop_table('unsubscribe_tokens')
    op.drop_index(op.f('ix_unsubscribe_records_id'), table_name='unsubscribe_records')
    op.drop_index(op.f('ix_unsubscribe_records_email_address'), table_name='unsubscribe_records')
    op.drop_index(op.f('ix_unsubscribe_records_domain'), table_name='unsubscribe_records')
    op.drop_table('unsubscribe_records')
    op.drop_table('team_members')
    op.drop_table('sessions')
    op.drop_table('payment_requests')
    op.drop_table('imap_folders')
    op.drop_index(op.f('ix_feedback_loops_reported_email'), table_name='feedback_loops')
    op.drop_index(op.f('ix_feedback_loops_id'), table_name='feedback_loops')
    op.drop_table('feedback_loops')
    op.drop_index(op.f('ix_failed_sends_id'), table_name='failed_sends')
    op.drop_table('failed_sends')
    op.drop_index(op.f('ix_email_bounces_id'), table_name='email_bounces')
    op.drop_index(op.f('ix_email_bounces_email_address'), table_name='email_bounces')
    op.drop_table('email_bounces')
    op.drop_index(op.f('ix_deliverability_stats_id'), table_name='deliverability_stats')
    op.drop_index(op.f('ix_deliverability_stats_date'), table_name='deliverability_stats')
    op.drop_table('deliverability_stats')
    op.drop_index(op.f('ix_consent_logs_id'), table_name='consent_logs')
    op.drop_index(op.f('ix_consent_logs_email_address'), table_name='consent_logs')
    op.drop_table('consent_logs')
    op.drop_index(op.f('ix_campaign_metrics_id'), table_name='campaign_metrics')
    op.drop_table('campaign_metrics')
    op.drop_index(op.f('ix_campaign_emails_id'), table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_status', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_smtp', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_sent_at', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_proxy', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_opened', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_email', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_clicked', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_campaign_status', table_name='campaign_emails')
    op.drop_index('idx_campaign_emails_campaign', table_name='campaign_emails')
    op.drop_table('campaign_emails')
    op.drop_table('user_plans')
    op.drop_table('usage_counters')
    op.drop_table('trial_plans')
    op.drop_table('team_plans')
    op.drop_table('session_devices')
    op.drop_index(op.f('ix_oauth_tokens_id'), table_name='oauth_tokens')
    op.drop_table('oauth_tokens')
    op.drop_index(op.f('ix_licenses_id'), table_name='licenses')
    op.drop_table('licenses')
    op.drop_table('import_logs')
    op.drop_table('hd_wallet_addresses')
    op.drop_table('email_bases')
    op.drop_table('bulk_mail_jobs')
    op.drop_table('xpub_validations')
    op.drop_index(op.f('ix_unsubscribe_reason_categories_id'), table_name='unsubscribe_reason_categories')
    op.drop_table('unsubscribe_reason_categories')
    op.drop_table('trial_configurations')
    op.drop_table('thread_pools')
    op.drop_table('template_themes')
    op.drop_table('template_block_types')
    op.drop_index(op.f('ix_session_analytics_session_id'), table_name='session_analytics')
    op.drop_index(op.f('ix_session_analytics_id'), table_name='session_analytics')
    op.drop_table('session_analytics')
    op.drop_index(op.f('ix_server_performance_logs_id'), table_name='server_performance_logs')
    op.drop_table('server_performance_logs')
    op.drop_index(op.f('ix_proxy_performance_analytics_id'), table_name='proxy_performance_analytics')
    op.drop_index(op.f('ix_proxy_performance_analytics_analysis_date'), table_name='proxy_performance_analytics')
    op.drop_index('idx_proxy_analytics_performance', table_name='proxy_performance_analytics')
    op.drop_index('idx_proxy_analytics_host_port', table_name='proxy_performance_analytics')
    op.drop_table('proxy_performance_analytics')
    op.drop_index(op.f('ix_preference_centers_id'), table_name='preference_centers')
    op.drop_table('preference_centers')
    op.drop_table('plans')
    op.drop_table('plan_status')
    op.drop_table('integration_templates')
    op.drop_table('integration_providers')
    op.drop_index(op.f('ix_global_suppression_list_id'), table_name='global_suppression_list')
    op.drop_index(op.f('ix_global_suppression_list_email_address'), table_name='global_suppression_list')
    op.drop_index(op.f('ix_global_suppression_list_domain'), table_name='global_suppression_list')
    op.drop_table('global_suppression_list')
    op.drop_index(op.f('ix_error_pattern_analysis_id'), table_name='error_pattern_analysis')
    op.drop_index(op.f('ix_error_pattern_analysis_analysis_date'), table_name='error_pattern_analysis')
    op.drop_table('error_pattern_analysis')
    op.drop_index(op.f('ix_email_preferences_id'), table_name='email_preferences')
    op.drop_index(op.f('ix_email_preferences_email_address'), table_name='email_preferences')
    op.drop_index(op.f('ix_email_preferences_domain'), table_name='email_preferences')
    op.drop_table('email_preferences')
    op.drop_table('domains')
    op.drop_index(op.f('ix_debug_client_events_trace_id'), table_name='debug_client_events')
    op.drop_index(op.f('ix_debug_client_events_event_type'), table_name='debug_client_events')
    op.drop_table('debug_client_events')
    op.drop_index(op.f('ix_contact_journeys_id'), table_name='contact_journeys')
    op.drop_index(op.f('ix_contact_journeys_contact_email'), table_name='contact_journeys')
    op.drop_table('contact_journeys')
    op.drop_index(op.f('ix_bulk_check_performance_snapshots_snapshot_time'), table_name='bulk_check_performance_snapshots')
    op.drop_index(op.f('ix_bulk_check_performance_snapshots_id'), table_name='bulk_check_performance_snapshots')
    op.drop_index('idx_perf_snapshot_time_window', table_name='bulk_check_performance_snapshots')
    op.drop_table('bulk_check_performance_snapshots')
    op.drop_index(op.f('ix_bulk_check_jobs_session_id'), table_name='bulk_check_jobs')
    op.drop_index(op.f('ix_bulk_check_jobs_id'), table_name='bulk_check_jobs')
    op.drop_index(op.f('ix_bulk_check_jobs_celery_task_id'), table_name='bulk_check_jobs')
    op.drop_index('idx_bulk_jobs_status_created', table_name='bulk_check_jobs')
    op.drop_index('idx_bulk_jobs_session_type', table_name='bulk_check_jobs')
    op.drop_index('idx_bulk_jobs_performance', table_name='bulk_check_jobs')
    op.drop_table('bulk_check_jobs')
    op.drop_index(op.f('ix_bounce_rules_id'), table_name='bounce_rules')
    op.drop_table('bounce_rules')
    op.drop_index(op.f('ix_blacklist_checks_id'), table_name='blacklist_checks')
    op.drop_table('blacklist_checks')
    op.drop_table('bitcoin_wallets')
    op.drop_index(op.f('ix_automation_workflows_id'), table_name='automation_workflows')
    op.drop_table('automation_workflows')
    op.drop_index(op.f('ix_automation_templates_id'), table_name='automation_templates')
    op.drop_table('automation_templates')
    # ### end Alembic commands ###
