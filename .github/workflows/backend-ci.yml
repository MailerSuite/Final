name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  pull_request:
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sgpt_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            backend/requirements.txt
            backend/requirements-dev.txt
      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install bandit safety
      - name: Wait for Postgres
        run: |
          until pg_isready -h 127.0.0.1 -p 5432 -U postgres; do echo 'waiting for postgres'; sleep 2; done
      - name: Run migrations
        working-directory: backend
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/sgpt_dev
        run: |
          alembic upgrade head
      - name: Run tests
        working-directory: backend
        env:
          ENVIRONMENT: test
          DEBUG: "False"
          TESTING: "True"
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/sgpt_dev
          REDIS_URL: redis://127.0.0.1:6379/0
        run: pytest -q
      - name: Security scan (Bandit)
        working-directory: backend
        run: bandit -r app || true
      - name: Vulnerability scan (Safety)
        working-directory: backend
        run: safety check || true